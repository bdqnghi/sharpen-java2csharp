package javadoc;

/**
 * Remarks should be used to describe types,
 * names like .NET should not make a difference.
 * A remark can span multiple lines.
 * And xml significant characters such as < and > should be escaped.
 * But not html tags such as <p></p>, <br> and <code>foo</code> which are legal.
 */
public abstract class Javadoc1 {
	/**
	 * Constructors can have it too.
	 */
	public Javadoc1() {
	}
	
	/**
	 * Link to method with no args specified: {@link #depracatedMethod}
	 * Link to method with args specified   : {@link #depracatedMethod(String[], String[][])}
	 * Methods should have a summary.
	 * Multiple lines also allowed. 
	 * Try with - {@link Javadoc1#BAR}
	 * And also with -{@link #BAR}
	 * @param bar the bar argument
	 * @param object the object argument
	 * @return the ultimate answer
	 * @throws IllegalStateException when things go crazy
	 * @see Integer#MAX_VALUE
	 * @see <a href="http://a-valid-url.com/resource">Ancor Text</a>
	 */
	public int foo(int bar, Object object) throws IllegalStateException {
		return 42;
	}
	
	public abstract void bar() throws java.io.IOException;
	
	/**
	 * Blah.
	 */
	public static final int BAR = 42;
	
	/**
	 * Type references should not cause using statements to be added to
	 * the c# code. {@link Thread}.
	 */
	public abstract void typeReferences();
	
	/**
	 * @deprecated Use {@link Thread} class instead.
	 */
	public void depracatedMethod(String[] args, String[][] args2) {}
}
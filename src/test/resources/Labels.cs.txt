public class Labels
{
	internal static int j = 42;

	public virtual void testBreakSwitch()
	{
		switch (j)
		{
			case 42:
			{
				return;
			}

			case 43:
			{
				goto mylabel_break;
			}

			case 44:
			{
				break;
			}
		}
mylabel_break: ;
	}

	public virtual void testBreakWhile()
	{
		while (true)
		{
			if (j == 1)
			{
				break;
			}
			else
			{
				if (j == 2)
				{
					goto mylabel_break;
				}
			}
			goto mylabel_break;
mylabel_continue: ;
		}
mylabel_break: ;
	}

	public virtual void testBreakFor()
	{
		for (int i = 0; i < 10; i++)
		{
			if (j == 1)
			{
				break;
			}
			else
			{
				if (j == 2)
				{
					goto mylabel_break;
				}
			}
			goto mylabel_break;
mylabel_continue: ;
		}
mylabel_break: ;
	}

	public virtual void testBreakNestedLoops()
	{
		for (int i = 0; i < 10; i++)
		{
			for (int k = 0; k < 10; k++)
			{
				for (int m = 0; m < 10; m++)
				{
					if (i == 5 && k == 5 && m == 5)
					{
						goto mylabel1_break;
					}
					else
					{
						goto mylabel2_break;
					}
				}
mylabel2_continue: ;
			}
mylabel2_break: ;
mylabel1_continue: ;
		}
mylabel1_break: ;
	}

	public virtual void testContinueFor()
	{
		for (int i = 0; i < 10; i++)
		{
			if (j == 1)
			{
				continue;
			}
			else
			{
				if (j == 2)
				{
					for (int j = 0; j < 10; j++)
					{
					}
					// no labels here please
					goto mylabel_continue;
				}
			}
			goto mylabel_continue;
mylabel_continue: ;
		}
mylabel_break: ;
	}

	public virtual void testContinueDo()
	{
		do
		{
			if (j == 1)
			{
				continue;
			}
			else
			{
				if (j == 2)
				{
					for (int j = 0; j < 10; j++)
					{
					}
					// no labels here please
					goto mylabel_continue;
				}
			}
mylabel_continue: ;
		}
		while (true);
mylabel_break: ;
	}

	public virtual void testContinueWhile()
	{
		while (true)
		{
			if (j == 1)
			{
				continue;
			}
			else
			{
				if (j == 2)
				{
					for (int j = 0; j < 10; j++)
					{
					}
					goto mylabel_continue;
				}
			}
mylabel_continue: ;
		}
mylabel_break: ;
	}

	public virtual void testNoContinueLabel()
	{
		for (int i = 0; i < 10; i++)
		{
		}
mylabel_break: ;
	}

	public virtual void testNoContinueLabelInSwitch()
	{
		switch (j)
		{
			case 42:
			{
				for (int i = 0; i < 10; i++)
				{
				}
				return;
			}
		}
mylabel_break: ;
	}

	public virtual void testContinueFromCatch()
	{
		for (; ; )
		{
			try
			{
			}
			catch (System.Exception)
			{
				goto mylabel_continue;
			}
mylabel_continue: ;
		}
mylabel_break: ;
	}
}